import io;
import Fac;
class AiVida extends Grr {
    int ai;
    int[] classArr;
    AiVida fieldAi;

    public static void main(String[] args){
        int a;
        int[] local;
        AiVida aloha;
        Fac f;

        // TODO:
        // io.println(new AiVida().doNothing());

        // Working
        /*
        io.println(new AiVida());
        this.doSomething(1,io.getWhat());
        io.println(new int[6]);

        a = 1;
        aloha = new AiVida();
        f = new Fac();
        local = new int[a];
        a = io.println(10,classArr[ai]);
        a = io.println(10,args[ai]);
        a = io.getWhatever(10,args[ai]) + 6;
        Fac.staticMethod();
        classArr = new int[a];
        fieldAi = new Aivida();
        a = this.retornaInt(new int[a]);
        ai = io.println();
        ai = this.retornaInt(new int[a]);
        */
    }


    public int retornaInt(int[] paramArr){
        int a;
        int[] b;
        AiVida vida;

        // Working
        /*
        a = this.doSomething(1,2);
        a = this.doSomething(a + 2,2);
        a = this.doSomething(b[3+a],3);
        a = this.doSomething(ai+9,a);
        a = this.doSomething(a, this.doNothing());
        a = this.doSomething(a,this.doSomething(ai+b[6]+1, this.doNothing()));
        a = 34 + this.doSomething(ai, b[4 + this.doNothing()]) + this.doNothing();
        a = b[this.doSomething(this.doNothing(),2)];
        a = this.what()[2];
        a = classArr[2];
        a = paramArr[2];
        a = vida.doNothing();
        a = vida.assumirExtend();
        */

        return a;
    }


    public AiVida retornaDaClasse(){
        AiVida test;
        return test;
    }

    public int[] what(){
        int[] ok;
        return ok;
    }

    public int doSomething(int a, int b){
        return 23;
    }
    public int doNothing(){
        return 1;
    }

}