Fac{
	.construct Fac().V {
		invokespecial(this, "<init>").V;
	}
	.method public compFac(num.i32).i32{
		if ($1.num.i32 <.i32 1.i32) goto then1;
		else1:
			t1.i32 :=.i32 $1.num.i32 -.i32 1.i32;
			t2.i32 :=.i32 invokevirtual(this,"compFac", t1.i32).i32;
			num_aux.i32 :=.i32 $1.num.i32 *.i32 t2.i32;
			goto endif1;
		then1:
			num_aux.i32 :=.i32 1.i32;
		endif1:
			ret.i32 num_aux.i32;
	}
	.method public static main(args.array.String).V{
		t3.Fac :=.Fac new(Fac).Fac;
		invokespecial(t3.Fac,"<init>").V;
		t4.i32 :=.i32 invokevirtual(t3.Fac, "compFac", 10.i32).i32;
		invokestatic(io, "println", t4.i32).V;
		ret.V;
	}
}